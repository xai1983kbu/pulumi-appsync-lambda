input FindPlaceInput {
	id: ID!
	latitude: Float!
	longitude: Float!
	userId: ID!
}

type Mutation {
	putPost(id: ID!, title: String!): Post
	addPlace(place: PlaceInput): Place
	deletePlace(findPlaceInput: FindPlaceInput): Boolean
	updatePlace(findPlaceInput: FindPlaceInput, updateInput: UpdatePlaceInput): Place
}

type Place {
	latitude: Float
	longitude: Float
	title: String
	content: String
	image: S3Object
	userId: String
	placeId: String
}

input PlaceInput {
	latitude: Float
	longitude: Float
	title: String
	content: String
	image: S3ObjectInput
	userId: String
}

input PointInput {
	latitude: Float
	longitude: Float
}

type Post {
	id: ID!
	title: String!
}

type Query {
	singlePost(id: ID!): Post
	queryRadius(radius: Int, centerPoint: PointInput): [Place!]
}

input QueryRadiusInput {
	radiusInMeter: Int!
	centerPoint: PointInput!
}

type S3Object {
	bucket: String!
	region: String!
	key: String!
}

input S3ObjectInput {
	bucket: String!
	region: String!
	key: String!
}

input UpdatePlaceInput {
	title: String
	content: String
	image: S3ObjectInput
}

schema {
	query: Query
	mutation: Mutation
}